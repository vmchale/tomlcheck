[builder-admin-proxy]
plan_path = "components/builder-admin-proxy"

[builder-admin]
plan_path = "components/builder-admin/habitat"
paths = [
  "components/builder-admin/*",
  "components/builder-http-gateway/*",
  "components/builder-protocol/*",
  "components/core/*",
  "components/github-api-client/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-api-proxy]
plan_path = "components/builder-api-proxy"
paths = [
  "components/builder-web/*",
]

[builder-api]
plan_path = "components/builder-api/habitat"
paths = [
  "components/builder-api/*",
  "components/builder-core/*",
  "components/builder-depot/*",
  "components/builder-http-gateway/*",
  "components/builder-protocol/*",
  "components/core/*",
  "components/github-api-client/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-datastore]
plan_path = "components/builder-datastore"

[builder-jobsrv]
plan_path = "components/builder-jobsrv/habitat"
paths = [
  "components/builder-jobsrv/*",
  "components/builder-core/*",
  "components/builder-protocol/*",
  "components/builder-db/*",
  "components/core/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-originsrv]
plan_path = "components/builder-originsrv/habitat"
paths = [
  "components/builder-originsrv/*",
  "components/builder-protocol/*",
  "components/builder-db/*",
  "components/core/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-router]
plan_path = "components/builder-router/habitat"
paths = [
  "components/builder-router/*",
  "components/builder-protocol/*",
  "components/core/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-scheduler]
plan_path = "components/builder-scheduler/habitat"
paths = [
  "components/builder-scheduler/*",
  "components/builder-core/*",
  "components/builder-protocol/*",
  "components/builder-db/*",
  "components/core/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-sessionsrv]
plan_path = "components/builder-sessionsrv/habitat"
paths = [
  "components/builder-sessionsrv/*",
  "components/builder-protocol/*",
  "components/builder-db/*",
  "components/core/*",
  "components/github-api-client/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[builder-worker]
plan_path = "components/builder-worker/habitat"
paths = [
  "components/builder-worker/*",
  "components/builder-core/*",
  "components/builder-depot-client/*",
  "components/builder-protocol/*",
  "components/core/*",
  "components/github-api-client/*",
  "components/net/*",
  "support/ci/builder-base-plan.sh",
]

[hab]
plan_path = "components/hab"
paths = [
  "components/hab/*",
  "components/builder-api-client/*",
  "components/builder-depot-client/*",
  "components/common/*",
  "components/core/*",
  "components/http-client/*",
]

[hab-backline]
plan_path = "components/backline"

[hab-bintray-publish]
plan_path = "components/bintray-publish"

[hab-butterfly]
plan_path = "components/hab-butterfly"
paths = [
  "components/hab-butterfly/*",
  "components/butterfly/*",
  "components/common/*",
  "components/core/*",
  "components/hab/*",
]

[hab-eventsrv]
plan_path = "components/eventsrv/habitat"
paths = [
  "components/eventsrv/*",
  "components/eventsrv-protocol/*",
  "components/core/*",
  "support/ci/builder-base-plan.sh",
]

[hab-launcher]
plan_path = "components/launcher/habitat"
paths = [
  "components/launcher/*",
  "components/launcher-protocol/*",
  "support/ci/builder-base-plan.sh",
]

[hab-studio]
plan_path = "components/studio"

[hab-sup]
plan_path = "components/sup"
paths = [
  "components/sup/*",
  "components/eventsrv-client/*",
  "components/launcher-client/*",
  "components/butterfly/*",
  "components/core/*",
  "components/builder-depot-client/*",
]

[hab-pkg-aci]
plan_path = "components/pkg-aci"

[hab-pkg-export-docker]
plan_path = "components/pkg-export-docker"
paths = [
  "components/core/*",
  "components/common/*",
  "components/hab/*",
]

[hab-pkg-mesosize]
plan_path = "components/pkg-mesosize"

[hab-pkg-tarize]
plan_path = "components/pkg-tarize"
